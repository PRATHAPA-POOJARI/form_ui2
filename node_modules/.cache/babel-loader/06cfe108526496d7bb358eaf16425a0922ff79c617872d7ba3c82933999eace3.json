{"ast":null,"code":"var _jsxFileName = \"F:\\\\react1\\\\Form_ui\\\\form-create\\\\src\\\\components\\\\FormView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Typography, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormView = () => {\n  _s();\n  const [forms, setForms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/forms');\n        console.log('API Response:', response.data);\n        if (Array.isArray(response.data)) {\n          console.log('Setting forms:', response.data);\n          setForms(response.data);\n        } else {\n          console.error('Invalid API response format:', response.data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (forms.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No forms available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Form Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), forms.map(form => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10,\n        maxWidth: 400,\n        margin: 'auto',\n        marginTop: 10,\n        border: '1px solid #ccc',\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: form.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: `Number of Inputs: ${form.inputs.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: form.inputs.map((input, index) => {\n          console.log('Input:', input);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Type: \", input.type, \", Title: \", input.title, \", Placeholder: \", input.placeholder]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: `/form/view/${form._id}`,\n        variant: \"outlined\",\n        color: \"primary\",\n        children: \"View Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: `/form/${form._id}/edit`,\n        variant: \"outlined\",\n        color: \"secondary\",\n        children: \"Edit Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, form._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(FormView, \"7AKmOUPs3TPwUA2qJORGTxWkJG4=\");\n_c = FormView;\nexport default FormView;\nvar _c;\n$RefreshReg$(_c, \"FormView\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Typography","Button","jsxDEV","_jsxDEV","FormView","_s","forms","setForms","loading","setLoading","fetchData","response","get","console","log","data","Array","isArray","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","map","form","style","padding","maxWidth","margin","marginTop","border","borderRadius","title","inputs","input","index","type","placeholder","component","to","_id","color","_c","$RefreshReg$"],"sources":["F:/react1/Form_ui/form-create/src/components/FormView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Typography, Button } from '@mui/material';\r\n\r\nconst FormView = () => {\r\n  const [forms, setForms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/forms');\r\n        console.log('API Response:', response.data);\r\n\r\n        if (Array.isArray(response.data)) {\r\n          console.log('Setting forms:', response.data);\r\n          setForms(response.data);\r\n        } else {\r\n          console.error('Invalid API response format:', response.data);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching form data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (forms.length === 0) {\r\n    return <div>No forms available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Form Data</Typography>\r\n      {forms.map((form) => (\r\n        <div key={form._id} style={{ padding: 10, maxWidth: 400, margin: 'auto', marginTop: 10, border: '1px solid #ccc', borderRadius: 8 }}>\r\n          <Typography variant=\"h4\">{form.title}</Typography>\r\n          <Typography variant=\"body1\">{`Number of Inputs: ${form.inputs.length}`}</Typography>\r\n\r\n          {/* Display each input in the form */}\r\n          <ul>\r\n            {form.inputs.map((input, index) => {\r\n              console.log('Input:', input);\r\n              return (\r\n                <li key={index}>\r\n                  Type: {input.type}, Title: {input.title}, Placeholder: {input.placeholder}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          {/* Use MUI Button for consistent styling */}\r\n          <Button component={Link} to={`/form/view/${form._id}`} variant=\"outlined\" color=\"primary\">\r\n            View Form\r\n          </Button>\r\n\r\n          <Button component={Link} to={`/form/${form._id}/edit`} variant=\"outlined\" color=\"secondary\">\r\n            Edit Form\r\n          </Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}